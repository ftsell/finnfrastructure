- name: Install icinga2
  become: true
  apt:
    name: [icinga2, monitoring-plugins]

- name: Setup icinga CA
  tags: [pki]
  block:
    - name: Create required pki directories
      become: true
      with_items:
        - { path: /var/lib/icinga2/ca, mode: "u=rwx,g=,o=" }
        - { path: /var/lib/icinga2/certs, mode: "u=rwx,g=rx,o=" }
      file:
        path: "{{ item.path }}"
        state: directory
        owner: nagios
        group: nagios
        mode: "{{ item.mode }}"
    - name: Create ca private key
      become: true
      ansible.builtin.openssl_privatekey:
        path: /var/lib/icinga2/ca/ca.key
        owner: nagios
        group: nagios
        mode: u=rw,g=r,o=
    - name: Create ca csr
      become: true
      ansible.builtin.openssl_csr:
        path: /var/lib/icinga2/ca.csr
        privatekey_path: /var/lib/icinga2/ca/ca.key
        common_name: Icinga CA
        basic_constraints:
          - "CA:TRUE"
        basic_constraints_critical: true
        owner: nagios
        group: nagios
        mode: u=rw,g=r,o=
    - name: Create self-signed ca certificate
      become: true
      ansible.builtin.openssl_certificate:
        path: /var/lib/icinga2/ca/ca.crt
        csr_path: /var/lib/icinga2/ca.csr
        privatekey_path: /var/lib/icinga2/ca/ca.key
        provider: selfsigned
        owner: nagios
        group: nagios
        mode: u=rw,g=r,o=
    - name: Copy CA certificate to cert dir
      become: true
      ansible.builtin.copy:
        src: /var/lib/icinga2/ca/ca.crt
        dest: /var/lib/icinga2/certs/ca.crt
        remote_src: true
        owner: nagios
        group: nagios
        mode: u=rw,g=r,o=

- name: Setup key material for this node
  tags: [pki]
  notify: Restart icinga2
  block:
    - name: Create {{ icinga_node_fqdn }} private key
      become: true
      ansible.builtin.openssl_privatekey:
        path: /var/lib/icinga2/certs/{{ icinga_node_fqdn }}.key
        owner: nagios
        group: nagios
        mode: u=rw,g=r,o=
    - name: Create {{ icinga_node_fqdn }} csr
      become: true
      ansible.builtin.openssl_csr:
        path: /var/lib/icinga2/certs/{{ icinga_node_fqdn }}.csr
        privatekey_path: /var/lib/icinga2/certs/{{ icinga_node_fqdn }}.key
        common_name: "{{ icinga_node_fqdn}}"
        basic_constraints:
          - "CA:FALSE"
        basic_constraints_critical: true
        owner: nagios
        group: nagios
        mode: u=rw,g=r,o=
    - name: Sign {{ icinga_node_fqdn }} certificate with ca
      become: true
      ansible.builtin.openssl_certificate:
        path: /var/lib/icinga2/certs/{{ icinga_node_fqdn }}.crt
        csr_path: /var/lib/icinga2/certs/{{ icinga_node_fqdn }}.csr
        provider: ownca
        ownca_path: /var/lib/icinga2/certs/ca.crt
        ownca_privatekey_path: /var/lib/icinga2/ca/ca.key
        owner: nagios
        group: nagios
        mode: u=rw,g=r,o=

- name: Remove icinga2 default local configuration
  become: true
  notify: Restart icinga2
  with_items:
    - apt.conf
    - commands.conf
    - downtimes.conf
    - groups.conf
    - hosts.conf
    - notifications.conf
    - services.conf
    - templates.conf
    - timeperiods.conf
    - users.conf
  ansible.builtin.file:
    path: /etc/icinga2/conf.d/{{ item }}
    state: absent

- name: Create needed icinga2 config directory
  become: true
  with_filetree: templates/icinga2/
  loop_control:
    label: "{{ item.path }}"
  when: item.state == "directory"
  file:
    path: /etc/icinga2/{{ item.path }}
    state: directory
    owner: nagios
    group: nagios
    mode: u=rwx,g=rx,o=

- name: Configure icinga2
  become: true
  notify: Restart icinga2
  with_filetree: templates/icinga2/
  loop_control:
    label: "{{ item.path }}"
  when: item.state == "file"
  ansible.builtin.template:
    src: "icinga2/{{ item.path }}"
    dest: "/etc/icinga2/{{ item.path }}"
    owner: nagios
    group: nagios
    mode: u=rw,g=r,o=

- name: Configure enablement of icinga features
  become: true
  notify: Restart icinga2
  with_items:
    - { feature: api, enabled: true }
    - { feature: checker, enabled: true }
    - { feature: icingadb, enabled: true }
    - { feature: mainlog, enabled: true }
    - { feature: notification, enabled: true }
    - { feature: journald, enabled: true }
  loop_control:
    label: "{{ item.feature }} = {{ item.enabled }}"
  ansible.builtin.file:
    path: /etc/icinga2/features-enabled/{{ item.feature }}.conf
    state: "{% if item.enabled %}link{% else %}absent{% endif %}"
    src: /etc/icinga2/features-available/{{ item.feature }}.conf

- name: Deploy custom scripts
  become: true
  with_fileglob: scripts/*
  loop_control:
    label: "{{ item | basename }}"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/lib/nagios/plugins/{{ item | basename }}
    owner: nagios
    group: nagios
    mode: u=rwx,g=rx,o=
